name: Deploy to Firebase Hosting (LIVE)

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

permissions:
  contents: read

env:
  PROJECT_ID: joyscores
  SITE_ID: joyscores-ef086

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      # Optional: only if you actually read NEXT_PUBLIC_* at build time
      - name: Create .env.local from repo variables
        run: |
          cat > .env.local << 'EOF'
          NEXT_PUBLIC_FB_API_KEY=${{ vars.NEXT_PUBLIC_FB_API_KEY }}
          NEXT_PUBLIC_FB_AUTH_DOMAIN=${{ vars.NEXT_PUBLIC_FB_AUTH_DOMAIN }}
          NEXT_PUBLIC_FB_DB_URL=${{ vars.NEXT_PUBLIC_FB_DB_URL }}
          NEXT_PUBLIC_FB_PROJECT_ID=${{ vars.NEXT_PUBLIC_FB_PROJECT_ID }}
          NEXT_PUBLIC_FB_STORAGE_BUCKET=${{ vars.NEXT_PUBLIC_FB_STORAGE_BUCKET }}
          NEXT_PUBLIC_FB_APP_ID=${{ vars.NEXT_PUBLIC_FB_APP_ID }}
          EOF

      - name: Install deps
        run: pnpm install --frozen-lockfile

      - name: Build + Export (static)
        run: pnpm build:static

      - name: Write Firebase service account
        run: |
          echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT_JOYSCORES }}' > $HOME/sa.json
          echo "GOOGLE_APPLICATION_CREDENTIALS=$HOME/sa.json" >> $GITHUB_ENV

      - name: Install Firebase CLI
        run: npm i -g firebase-tools@14

      - name: ðŸš€ Deploy to LIVE (uploads /out per firebase.json)
        run: |
          set -e
          firebase --version
          firebase deploy --only hosting:"$SITE_ID" --project "$PROJECT_ID" --non-interactive
